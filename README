#mp3 file splitter
This is a simple script that splits and mp3 file seperate tracks

The only required arguments are the mp3 file and a 'config' file.

Usage example:
`python .\split.py -f="myMp3File.mp3" -c="timeline.txt"`

options are:
```
  -h, --help            show this help message and exit
  -f FILE, --file FILE  Location of the mp3 file to be split
  -c CONFIG, --config CONFIG
                        Location of config file
  -o OUTPUT, --output OUTPUT
                        Output location for file/s (optional)
  -a ALBUM, --album ALBUM
                        Album name (optional)
  -art ARTIST, --artist ARTIST
                        Add contributing artist (optional)
  -comp COMPOSER, --composer COMPOSER
                        Composer name (optional)
  -tdisc TOTAL_DISCS, --total_discs TOTAL_DISCS
                        Total number of discs (optional)
  -disc DISC, --disc DISC
                        Disc number (optional)
```

The config file shoud only contain timeline information, in the form you'd find on YouTube.

For example, on https://youtu.be/73GPBc2MjVo you will find:
```
#1 Ensnared Upon the Chessboard - 00:00:00
#2 Order in Chaos - 00:02:48
#3 In Mating Nets - 00:05:45
#4 Shuttling Through the Abyssal Rift - 00:06:31
#5 Prayer in a Land of War - 00:07:43
```
in the description. So make a plaintext file and put that content in, then point to it with the -c flag.

# Requirements
 - Was used with Python 3.12.9
 - Requirements.txt attached 
   - `pip install -r requirements.txt`
##Important Note on pydub
For pydub to work, it needs an audio processing backend. The most common one is FFmpeg. You will need to install it on your system separately; it is not a Python package and cannot be installed with pip.

For me I simply ran the following and closed + reopened my terminal.
```
pip install ffmpeg-downloader
ffdl install --add-path
```
